<launch>
   <!-- By default, we are not in debug mode -->
   <arg name="debug" default="false" />
   <rosparam command="load" file="$(find mobile_manip)/config/mm_main.yaml" />
   <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
   <include file="$(find mobile_manip)/launch/planning_context.launch">
     <arg name="load_robot_description" value="true"/>
   </include>

   <!-- We do not have a robot connected, so publish fake joint states -->
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     <param name="/use_gui" value="false"/>
     <!-- <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam> -->
     <rosparam param="/source_list">[/joint_states]</rosparam>
   </node>

   <!-- Given the published joint states, publish tf for the robot links -->
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

   <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <arg name="plugin" default="ompl"/>
   <include file="$(find mobile_manip)/launch/move_group.launch">
     <arg name="allow_trajectory_execution" value="true"/>
     <arg name="fake_execution" value="true"/>
     <arg name="info" value="true"/>
     <arg name="debug" value="$(arg debug)"/>
     <arg name="planner_lib" default="$(arg plugin)"/>
   </include>

   <include file="$(find octomap_server)/launch/myoctomap.launch"/>

   <!-- Run Rviz and load the default config to see the state of the move_group node -->
   <include file="$(find mobile_manip)/launch/moveit_rviz.launch">
     <arg name="config" value="true"/>
     <arg name="debug" value="$(arg debug)"/>
   </include>

    <!-- Run the mobile manipulation node -->
   <node name="mobile_manip" pkg="mobile_manip" type="mm_main" respawn="false" output="screen"/>
</launch>
